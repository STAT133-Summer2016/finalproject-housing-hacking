mutate(County = tolower(county))
colnames(pop_df) = c("Date","Pop","County","year")
colnames(gdp_df) = c("Date","Income","County","year")
pop_df = mutate(pop_df,year = year(DATE))
gdp_df = mutate(gdp_df,year = year(DATE))
pop_df = read_csv("raw_data/popudata.csv") %>%
.[-c(1)] %>%
mutate(County = tolower(county))
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)] %>%
mutate(County = tolower(county))
pop_df = mutate(pop_df,year = year(DATE))
gdp_df = mutate(gdp_df,year = year(DATE))
colnames(pop_df) = c("Date","Pop","County","year")
colnames(gdp_df) = c("Date","Income","County","year")
pop_df = read_csv("raw_data/popudata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
pop_df = mutate(pop_df,year = year(DATE))
gdp_df = mutate(gdp_df,year = year(DATE))
colnames(pop_df) = c("Date","Pop","County","year")
colnames(gdp_df) = c("Date","Income","County","year")
new_map_data = inner_join(new_map_data,pop_df,by = c("subregion" = "County","year"))
new_map_data = inner_join(new_map_data,gdp_df,by = c("subregion" = "County","year"))
new_map_data = filter(new_map_data,-Date)
new_map_data = select(new_map_data,-Date)
new_map_data = select(new_map_data,-Date.x)
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County"))
new_map_data = inner_join(new_map_data,pop_df,by = c("subregion" = "County","year"))
new_map_data = inner_join(new_map_data,gdp_df,by = c("subregion" = "County","year"))
new_map_data = select(new_map_data,-Date.x,-Date.y)
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County")) %>%
inner_join(pop_df,by = c("subregion" = "County","year")) %>%
inner_join(gdp_df,by = c("subregion" = "County","year")) %>%
select(-Date.x,-Date.y)
typeof(new_map_data$year)
test_data = filter(new_map_data,Type = "A",year = 2000)
test_data = filter(new_map_data,Type = "A" and year = 2000)
test_data = filter(new_map_data,Type = "A" & year = 2000)
test_data = filter(new_map_data,Type == "A" & year == 2000)
View(test_data)
ca_base = ggplot(ca_df, aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Pop),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes
plt1
plt1 + scale_fill_gradient(trans = "log10")
plt1
plt1 + scale_fill_gradient(low = "#0C374D", high = "#EFD469")
plt1 + coord_fixed(xlim = c(-123, -121.0),
ylim = c(36, 38),
ratio = 1.3)
View(ca_county)
primary = c("Alameda","Contra Costa","San Mateo","Marin","Napa","Sacramento","Santa Clara","San Francisco")
city_code = read_csv("lookup_codes/city_codes.csv")
city_code = mutate(city_code,code = str_extract(city_code[[4]],"[0-9].*"))
city_code = city_code %>%
filter(State == "CA")
city_code = mutate(city_code,County = str_extract(city_code[[4]],"[a-zA-Z ]*"))
primary = c("Alameda","Contra Costa","San Mateo","Marin","Napa","Sacramento","Santa Clara","San Francisco")
city_code = filter(city_code,County %in% primary)
city_code = filter(city_code,!Region %in% c("San Pablo",'North Highlands','North Fair Oaks','Discovery Bay','Rodeo','Saint Helena','Fairfax'))
types = c("A","SF","MVSF","2B","3B","4B","BT","MT",'TT','RMP','RAH','RZSF','PRR','MLP','MSP','MLPSF','MSPSF','LPC','MPC','SLPR','SFL','SFG','IV','DV','SPY','HR','HF','FR')
names(types) = c("All Homes",'Single Family Residences','Price per Square Foot','2 Bedroom','3 Bedroom','4 Bedroom','Bottom Tier','Middle Tier','Top Tier','Median Rent, Homes Listed for Rent','Estimated Rent, All Homes in Region','Estimated Rent per Square Foot','Price-to-Rent Ratio',"Median List Price",'Median Sale Price',"Median List Price per Square Foot",'Median Salse Price per Square Foot',"Listings with Price Cut in Last 30 Days",'Median Price Cut',"Ratio of Sale Price to List Price ",'Sold for Loss','Sold for Gain','Increasing Values',"Decreasing Values","Turnover in Housing Market, Past 1 Year", "Number of Homes for Rent","Monthly Foreclosures per 10,00 Homes","Percentage of Sales that were Foreclosures")
CA_pricing = NULL
City_pricing = NULL
City_pricing = read_csv("raw_data/pricing_by_city.csv") %>%
.[-c(1)]
View(City_pricing)
City_pricing = unique(City_pricing)
View(city_code)
city_code = filter(city_code,County =='Santa Clara')
for(i in 1:length(city_code$code)){
for(j in types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
for(i in 1:length(city_code$code)){
for(j in c_types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
city_code = head(city_code,7)
c_types = c("A","SF","MVSF","2B","3B","4B")
City_pricing = read_csv("raw_data/pricing_by_city.csv") %>%
.[-c(1)]
for(i in 1:length(city_code$code)){
for(j in c_types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Pop),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(37, 40),
ratio = 1.3)
plt1
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Pop),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(37, 39),
ratio = 1.3)
plt1
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Pop),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(36, 39),
ratio = 1.3)
plt1
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Pop),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(37, 39),
ratio = 1.3)
plt1
for(i in 1:length(city_code$code)){
for(j in c_types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
for(i in 1:length(city_code$code)){
for(j in c_types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
for(i in 1:length(city_code$code)){
for(j in c_types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
City_pricing = unique(City_pricing)
write.csv(City_pricing,"raw_data/pricing_by_city.csv")
pop_df = read_csv("raw_data/popudata.csv")
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Income),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(37, 39),
ratio = 1.3)
plt1
for(i in 5:length(city_code$code)){
for(j in c_types){
scheme = str_c("ZILL/C",city_code$code[i],"_",j)
#print(scheme)
temp=NULL
tryCatch({temp = Quandl(scheme)},
finally = {
if (!is.null(temp)){
temp = mutate(temp,City=city_code$Region[i],County = city_code$County[i], Metro = city_code$Metro[i], Type = j)
}
City_pricing = rbind(City_pricing,temp)
})
}
n = i/length(city_code$code)
print(n)
}
City_pricing = unique(City_pricing)
write.csv(City_pricing,"raw_data/pricing_by_city.csv")
City_pricing = read_csv("raw_data/pricing_by_city.csv") %>%
.[-c(1)]
CA_pricing = read_csv("raw_data/pricing_by_state.csv") %>%
.[-c(1)]
pop_df = read_csv("raw_data/popudata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
City_pricing = mutate(City_pricing,year = year(Date))
pop_df = mutate(pop_df,year = year(DATE))
gdp_df = mutate(gdp_df,year = year(DATE))
colnames(pop_df) = c("Date","Pop","County","year")
colnames(gdp_df) = c("Date","Income","County","year")
bubble_data = inner_join(pop_df,gdp_df) %>%
mutate(Pop = Pop*1000) %>%
.[-1] %>%
inner_join(City_pricing) %>%
mutate(County = tolower(County)) %>%
write_csv("clean_data/cleaned_bubble_data.csv")
map_data = City_pricing %>%
group_by(year, County,Type) %>%
dplyr::summarise(Mean = mean(Value)) %>%
mutate(County = tolower(County))
states = map_data("state")
ca_df = filter(states, region == "california")
counties = map_data("county")
ca_county = filter(counties, region == "california")
ca_base = ggplot(ca_df, aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County")) %>%
inner_join(pop_df,by = c("subregion" = "County","year")) %>%
inner_join(gdp_df,by = c("subregion" = "County","year")) %>%
select(-Date.x,-Date.y)
write_csv(new_map_data,"clean_data/cleaned_map_data.csv")
bubble_data = read_csv("clean_data/cleaned_bubble_data.csv")
map_data = read_csv("clean_data/cleaned_map_data.csv")
test_data = filter(new_map_data,Type == "A" & year == 2000)
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Income),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(37, 39),
ratio = 1.3)
plt1
map_data = City_pricing %>%
group_by(year, County,Type) %>%
dplyr::summarise(Mean = mean(Value)) %>%
mutate(County = tolower(County))
states = map_data("state")
ca_df = filter(states, region == "california")
counties = map_data("county")
ca_county = filter(counties, region == "california")
ca_base = ggplot(ca_df, aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County")) %>%
inner_join(pop_df,by = c("subregion" = "County","year")) %>%
inner_join(gdp_df,by = c("subregion" = "County","year")) %>%
select(-Date.x,-Date.y)
City_pricing = mutate(City_pricing,year = year(Date))
City_pricing = read_csv("raw_data/pricing_by_city.csv") %>%
.[-c(1)]
City_pricing = mutate(City_pricing,year = year(Date))
map_data = City_pricing %>%
group_by(year, County,Type) %>%
dplyr::summarise(Mean = mean(Value)) %>%
mutate(County = tolower(County))
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County"))
FRED_code = read_csv("lookup_codes/FRED-datasets-codes.csv")
FRED_code = filter(FRED_code,str_match(FRED_code,"(, CA)"))
scheme = str_detect(FRED_code[[2]],"(, CA)")
FRED_code1 = data_frame(code = FRED_code[[1]][scheme],define = FRED_code[[2]][scheme])
scheme = list()
for (i in 1:length(primary)){
p = str_c('(',primary[i],')')
print(p)
scheme[[i]]= str_detect(FRED_code1[[2]],p)
}
scheme = Reduce("|",scheme)
FRED_code2 = data_frame(code = FRED_code1[[1]][scheme],define = FRED_code1[[2]][scheme])
FRED_codepopu <- filter(FRED_code2, grepl('Population', define)) %>%
mutate(county = str_replace(define, ".+ in (.+) County.+", "\\1"))
View(FRED_codepopu)
pop_df = read_csv("raw_data/popudata.csv") %>%
.[-c(1)]
popudata1 <- Quandl(FRED_codepopu$code[6]) %>%
mutate(county = FRED_codepopu$county[6])
pop_df <- rbind(pop_df, popudata1)
write.csv(pop_df, "raw_data/popudata.csv")
FRED_codegdppc <- filter(FRED_code2, grepl('Per Capita', define)) %>%
mutate(county = str_replace(define, ".+ in (.+) County.+", "\\1")) %>%
.[c(1:5, 8, 10), ]
View(FRED_codepopu)
View(FRED_codegdppc)
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)]
temp <- Quandl(FRED_codegdppc$code[2]) %>%
mutate(county = FRED_codegdppc$county[2])
gdp_df <- rbind(gdp_df, temp)
write.csv(gdp_df, "raw_data/gdppcdata.csv")
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
View(gdp_df)
City_pricing = read_csv("raw_data/pricing_by_city.csv") %>%
.[-c(1)]
CA_pricing = read_csv("raw_data/pricing_by_state.csv") %>%
.[-c(1)]
pop_df = read_csv("raw_data/popudata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
City_pricing = mutate(City_pricing,year = year(Date))
pop_df = mutate(pop_df,year = year(DATE))
gdp_df = mutate(gdp_df,year = year(DATE))
colnames(pop_df) = c("Date","Pop","County","year")
colnames(gdp_df) = c("Date","Income","County","year")
bubble_data = inner_join(pop_df,gdp_df) %>%
mutate(Pop = Pop*1000) %>%
.[-1] %>%
inner_join(City_pricing) %>%
mutate(County = tolower(County)) %>%
write_csv("clean_data/cleaned_bubble_data.csv")
map_data = City_pricing %>%
group_by(year, County,Type) %>%
dplyr::summarise(Mean = mean(Value)) %>%
mutate(County = tolower(County))
states = map_data("state")
ca_df = filter(states, region == "california")
counties = map_data("county")
ca_county = filter(counties, region == "california")
ca_base = ggplot(ca_df, aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County")) %>%
inner_join(pop_df,by = c("subregion" = "County","year")) %>%
inner_join(gdp_df,by = c("subregion" = "County","year")) %>%
select(-Date.x,-Date.y)
write_csv(new_map_data,"clean_data/cleaned_map_data.csv")
test_data = filter(new_map_data,Type == "A" & year == 2000)
plt1 = ca_base + geom_polygon(data = test_data, aes(fill=Income),color = "white")+
geom_polygon(color = 'black',fill=NA)+
theme_bw() +
ditch_the_axes +
coord_fixed(xlim = c(-123, -121.0),
ylim = c(37, 39),
ratio = 1.3)
plt1
pop_plt = ggplot(pop_df,aes(x=DATE,y=VALUE,color=county)) +
geom_smooth() +
geom_line() +
labs(title="Population VS. Year", x = "Year(s)",y ="Population(thousand)") +
scale_x_date(breaks = date_breaks("5 years"), date_labels = "%Y")
pop_plt
gdp_plt = ggplot(gdp_df,aes(x=DATE,y=VALUE,color=county)) +
geom_smooth() +
geom_line() +
labs(title="Income VS. Year", x = "Year(s)",y ="Income per Capita (dollar)") +
scale_x_date(breaks = date_breaks("5 years"), date_labels = "%Y")
gdp_plt
pop_plt = ggplot(pop_df,aes(x=Date,y=Value,color=county)) +
geom_smooth() +
geom_line() +
labs(title="Population VS. Year", x = "Year(s)",y ="Population(thousand)") +
scale_x_date(breaks = date_breaks("5 years"), date_labels = "%Y")
pop_plt
pop_plt = ggplot(pop_df,aes(x=Date,y=Pop,color=County)) +
geom_smooth() +
geom_line() +
labs(title="Population VS. Year", x = "Year(s)",y ="Population(thousand)") +
scale_x_date(breaks = date_breaks("5 years"), date_labels = "%Y")
pop_plt
gdp_plt = ggplot(gdp_df,aes(x=Date,y=Income,color=County)) +
geom_smooth() +
geom_line() +
labs(title="Income VS. Year", x = "Year(s)",y ="Income per Capita (dollar)") +
scale_x_date(breaks = date_breaks("5 years"), date_labels = "%Y")
gdp_plt
test_df = spread(new_map_data,Type,Mean)
View(test_df)
write_csv(test_df,"clean_data/cleaned_map_data.csv")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
runApp("app2")
map_data = read_csv("clean_data/cleaned_map_data.csv")
select(map_data,2B)
select(map_data,'2B')
names(new_map_data[10:12]) = c('TwoB','ThreeB','FourB')
names(new_map_data[10]) = c('TwoB')
test_df = names(new_map_data[10]) = c('TwoB')
test_df = names(map_data[10]) = c('TwoB')
names(map_data[10]) = c('TwoB')
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County")) %>%
inner_join(pop_df,by = c("subregion" = "County","year")) %>%
inner_join(gdp_df,by = c("subregion" = "County","year")) %>%
select(-Date.x,-Date.y)
City_pricing = read_csv("raw_data/pricing_by_city.csv") %>%
.[-c(1)]
CA_pricing = read_csv("raw_data/pricing_by_state.csv") %>%
.[-c(1)]
pop_df = read_csv("raw_data/popudata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
gdp_df = read_csv("raw_data/gdppcdata.csv") %>%
.[-c(1)] %>%
mutate(county = tolower(county))
City_pricing = mutate(City_pricing,year = year(Date))
pop_df = mutate(pop_df,year = year(DATE))
gdp_df = mutate(gdp_df,year = year(DATE))
colnames(pop_df) = c("Date","Pop","County","year")
colnames(gdp_df) = c("Date","Income","County","year")
map_data = City_pricing %>%
group_by(year, County,Type) %>%
dplyr::summarise(Mean = mean(Value)) %>%
mutate(County = tolower(County))
states = map_data("state")
ca_df = filter(states, region == "california")
counties = map_data("county")
ca_county = filter(counties, region == "california")
ca_base = ggplot(ca_df, aes(x = long, y = lat, group = group)) +
coord_fixed(1.3) +
geom_polygon(color = "black", fill = "gray")
new_map_data = inner_join(ca_county, map_data, by = c("subregion" = "County")) %>%
inner_join(pop_df,by = c("subregion" = "County","year")) %>%
inner_join(gdp_df,by = c("subregion" = "County","year")) %>%
select(-Date.x,-Date.y)
View(new_map_data)
names(map_data[10])
names(map_data[[10]])
colnames(map_data)
map_data = read_csv("clean_data/cleaned_map_data.csv")
colnames(map_data)
colnames(map_data[10])
colnames(map_data[10]) = "twoB"
colnames(map_data[10]) = c("twoB")
colnames(map_data) =c("long","lat","group","order","region","subregion","year","Pop","Income","twoB","threeB","fourB","A","BT","DV","FR","HF","HR","IV","LPC","MLP","MLPSF","MPC","MSP","MSPSF","MT","MVSF","PRR","RAH","RMP","RZSF","SF","SFG","SFL","SLPR","SPY","TT")
write_csv(map_data,"clean_data/cleaned_map_data.csv")
runApp("app2")
